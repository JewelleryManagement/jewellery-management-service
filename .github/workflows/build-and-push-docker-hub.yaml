# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and push jms-be to docker hub

on:
  push:
    branches: [ "*" ]

permissions:
  id-token: write
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        name: Checkout repository

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean install --file pom.xml

      - name: Copy jar to dockerfiles
        run: cp ./target/*.jar .github/dockerfiles/app.jar

      - name: Extract git hash
        id: get_hash
        run: echo "::set-output name=hash::$(git rev-parse --short HEAD)"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .github/dockerfiles
          platforms: linux/amd64,linux/arm64
          push: true
          file: .github/dockerfiles/Dockerfile_jms_be
          tags: vladokat/jms-be:${{ steps.get_hash.outputs.hash }}